package foo


import shapeless.{:+:, CNil}

import shapeless.tag.@@

sealed trait model

final object Suit extends Enumeration with model {
  type Suit = Value
  val SPADES, HEARTS, DIAMONDS, CLUBS = Value
}

final case class A(a: String) extends model

final case class B(b: String) extends model

final case class C(c: String) extends model

final case class Thing(id: java.util.UUID, name: String, optionalString: Option[String], union2: Either[Int, String], union3: Int :+: String :+: Boolean :+: CNil, union4: Int :+: String :+: Boolean :+: Long :+: CNil, union5: Int :+: String :+: Boolean :+: Long :+: Seq[String] :+: CNil, union6: Int :+: String :+: Boolean :+: Long :+: Seq[String] :+: A :+: CNil, union7: Int :+: String :+: Boolean :+: Long :+: Seq[String] :+: A :+: B :+: CNil, union8: Int :+: String :+: Boolean :+: Long :+: Seq[String] :+: A :+: B :+: C :+: CNil, suit: Suit.Value, taggedDecimal: @@[scala.math.BigDecimal, (shapeless.Nat._6, shapeless.Nat._2)], largePrecision: @@[scala.math.BigDecimal, ((shapeless.Nat._1, shapeless.Nat._6), shapeless.Nat._8)], largePrecisionAndScale: @@[scala.math.BigDecimal, ((shapeless.Nat._3, shapeless.Nat._6), (shapeless.Nat._2, shapeless.Nat._4))]) extends model
